<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="chrome://global/skin/" type="text/css"?><?xml-stylesheet href="takahashi.css" type="text/css"?><page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="presentation" xmlns:html="http:/www.w3.org/1999/xhtml" orient="vertical" onkeypress="Presentation.onKeyPress(event);">
<html:textarea id="builtinCode" style="visibility: collapse"><![CDATA[
A Brave New
Perl World
----
Stevan Little
stevan.little@iinteractive.com
----
Perl 5.16 and Beyond
by Jesse Vincent
----
Reduce
Perl Core
----
Core => Modules
----
A simpler language
is a more
evolve-able language
----
  Perl was always designed to
  be an evolving language.
                        -- Larry Wall
----
Perl 5 MOP
----
MOP???
----
A MOP is an abstraction of a
system of abstractions that
is used to build abstractions.
----
an abstraction
(the MOP)
----
system of abstractions
(classes, methods, etc.)
----
build abstractions
(your classes)
----
OR
----
An API for your
object system
----
Classes, Methods,
Attributes and
Instances
----
The Status Quo
----
*{$pkg . '::foo'} = \&bar;
----
# NOTE: Moose 2.0205 is depended
# on by 1433 modules on CPAN
Moose
----
Class::MOP
----
Class::Meta
----
and others
----
The Future
(perhaps)
----
# TO POINT OUT:
# the destructuring bind
# in the clear method
    class Point {
        has $x ( is => 'rw' ) = 0;
        has $y ( is => 'rw' ) = 0;

        method clear {
            ($x, $y) = (0, 0);
        }
    }
----
# TO POINT OUT:
# the next::method syntax
    class Point3D extends Point {
        has $z ( is => 'rw' ) = 0;

        method clear {
            $self->next::method;
            $z = 0;
        }
    }
----
# TO POINT OUT:
# how clean the +=
# and -= makes things
    class BankAccount {
        has $balance ( is => 'ro' ) = 0;

        method deposit ($amount) {
            $balance += $amount
        }

        method withdraw ($amount) {
            die "Account overdrawn"
                if ($balance >= $amount);
            $balance -= $amount;
        }
    }
----
# TO POINT OUT:
# that $balance is not
# accessible in the subclass
# the methods must be used.
    class CheckingAccount extends BankAccount {
        has $overdraft_account ( is => 'rw' );

        method withdraw ($amount) {

            my $overdraft_amount = $amount - $self->balance;

            if ( $overdraft_account && $overdraft_amount > 0 ) {
                $overdraft_account->withdraw(
                    $overdraft_amount
                );
                $self->deposit( $overdraft_amount );
            }

            $self->next::method( $amount );
        }
    }
----
# TO POINT OUT:
# spelling errors on slots
# are compile time errors
    class Foo {
        has $bar;

        method bar { $baz }; # COMPILE TIME ERROR!
    }
----
    package Foo;

    use strict;
    use warnings;

    class Bar {
        has $baz;
        method foo { $baz }
    }
----
    Foo::Bar->new( baz => 'goorch' );
----
    package Foo;

    our $FOO = 100_000;
    sub do_something { ... }

    class Bar {
        method foo {
            do_something( $baz, $FOO )
        }
    }
----

]]></html:textarea>

<deck flex="1" id="deck">

<vbox flex="1"
	onmousemove="Presentation.onMouseMoveOnCanvas(event);">
	<toolbox id="canvasToolbar">
		<toolbar>
			<toolbarbutton oncommand="Presentation.home()" label="|&lt;&lt;"
				observes="canBack"/>
			<toolbarbutton oncommand="Presentation.back()" label="&lt;"
				observes="canBack"/>
			<toolbarbutton oncommand="Presentation.forward()" label="&gt;"
				observes="canForward"/>
			<toolbarbutton oncommand="Presentation.end()" label="&gt;&gt;|"
				observes="canForward"/>
			<toolbarseparator/>
			<hbox align="center">
				<textbox id="current_page" size="4"
					oninput="if (this.value) Presentation.showPage(parseInt(this.value)-1);"/>
				<description value="/"/>
				<description id="max_page"/>
			</hbox>
			<toolbarseparator/>
			<vbox flex="2">
				<spacer flex="1"/>
				<scrollbar id="scroller"
					align="center" orient="horizontal"
					oncommand="Presentation.showPage(parseInt(event.target.getAttribute('curpos')));"
					onclick="Presentation.showPage(parseInt(event.target.getAttribute('curpos')));"
					onmousedown="Presentation.onScrollerDragStart();"
					onmousemove="Presentation.onScrollerDragMove();"
					onmouseup="Presentation.onScrollerDragDrop();"/>
				<spacer flex="1"/>
			</vbox>
			<toolbarseparator/>
			<spacer flex="1"/>
			<toolbarseparator/>
			<toolbarbutton id="toggleEva" label="Eva"
				type="checkbox"
				autoCheck="false"
				oncommand="Presentation.toggleEvaMode();"/>
			<toolbarseparator/>
			<toolbarbutton label="Edit"
				oncommand="Presentation.toggleEditMode();"/>
			<toolbarbutton oncommand="Presentation.reload();" label="Reload"/>
		</toolbar>
	</toolbox>
	<vbox flex="1" id="canvas"
		onclick="Presentation.onPresentationClick(event);">
		<spacer flex="1"/>
		<hbox flex="1">
			<spacer flex="1"/>
			<vbox id="content"/>
			<spacer flex="1"/>
		</hbox>
		<spacer flex="1"/>
	</vbox>
</vbox>


<vbox flex="1" id="edit">
	<toolbox>
		<toolbar>
			<toolbarbutton label="New Page"
				oncommand="Presentation.addPage()"/>
			<spacer flex="1"/>
			<toolbarseparator/>
			<toolbarbutton label="View"
				oncommand="Presentation.toggleEditMode();"/>
			<toolbarbutton oncommand="Presentation.reload();" label="Reload"/>
		</toolbar>
	</toolbox>
	<textbox id="textField" flex="1" multiline="true"
		oninput="Presentation.onEdit()"/>
	<hbox collapsed="true">
		<iframe id="dataLoader" onload="if (window.Presentation) Presentation.onDataLoad();"/>
	</hbox>
</vbox>

</deck>


<broadcasterset>
	<broadcaster id="canBack"/>
	<broadcaster id="canForward"/>
</broadcasterset>

<commandset>
	<command id="cmd_forward"
		oncommand="if (Presentation.isPresentationMode) Presentation.forward();"/>
	<command id="cmd_back"
		oncommand="if (Presentation.isPresentationMode) Presentation.back();"/>
	<command id="cmd_home"
		oncommand="if (Presentation.isPresentationMode) Presentation.home();"/>
	<command id="cmd_end"
		oncommand="if (Presentation.isPresentationMode) Presentation.end();"/>
</commandset>
<keyset>
	<key keycode="VK_ENTER"      command="cmd_forward"/>
	<key keycode="VK_RETURN"     command="cmd_forward"/>
	<key keycode="VK_PAGE_DOWN"  command="cmd_forward"/>
	<key keycode="VK_RIGHT"      command="cmd_forward"/>
	<key keycode="VK_DOWN"       command="cmd_forward"/>
	<!-- key keycode="VK_BACK_SPACE" command="cmd_back"/-->
	<key keycode="VK_PAGE_UP"    command="cmd_back"/>
        <!-- <key keycode="VK_BACK_UP"    command="cmd_back"/>-->
        <!-- <key keycode="VK_BACK_LEFT"  command="cmd_back"/>-->
	<key keycode="VK_HOME"       command="cmd_home"/>
	<key keycode="VK_END"        command="cmd_end"/>
	<key key="n" modifiers="accel" oncommand="Presentation.addPage();"/>
	<key key="r" modifiers="accel" oncommand="window.location.reload();"/>
	<key key="e" modifiers="accel" oncommand="Presentation.toggleEditMode();"/>
	<key key="a" modifiers="accel" oncommand="Presentation.toggleEvaMode();"/>
</keyset>


<script src="takahashi.js" type="application/x-javascript" />
</page>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Takahashi-Method-based Presentation Tool in XUL.
   -
   - The Initial Developer of the Original Code is SHIMODA Hiroshi.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s): SHIMODA Hiroshi <piro@p.club.ne.jp>
   -
   - ***** END LICENSE BLOCK ***** -->


